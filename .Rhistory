i <- i + 1
mas >= pr[i]^2]
mas >= pr[i]^2
mas <- 2:n
i <- 1
nn <- 10
pr <- integer()
pr[i] <- mas[1]
mas <- mas[!(mas[mas >= pr[i]^2] %% pr[i] == 0)]
mas
i <- i + 1
mas[1:1]
mas <- 2:n
p <- 1
i <- 1
nn <- 10
pr <- integer()
pr <- mas[mas < mas[i]^2]
pr <- pr[length(pr_seq)]
pr_seq <- c(pr_seq, mas[mas < mas[i]^2])
pr_seq <- integer()
pr_seq <- c(pr_seq, mas[mas < mas[i]^2])
pr <- pr_seq[length(pr_seq)]
compl <- mas[(mas[mas >= pr^2] %% pr[i] == 0)]
compl <- mas[(mas[mas >= pr^2] %% pr == 0)]
compl <- mas[(mas[mas >= pr^2] %% pr == 0)]
mas[mas >= pr^2]
mas[mas >= pr^2] %% pr == 0
pr_seq <- c(pr_seq, mas[mas < pr^2])
n <- 100
upp_b <- round(n / log(n))
mas <- 2:n
p <- 1
i <- 1
nn <- 10
pr_seq <- integer()
pr_seq <- c(pr_seq, mas[mas < mas[1]^2])
pr <- pr_seq[length(pr_seq)]
pr <- mas[1]
rr <- mas[(mas[mas >= pr^2] %% pr == 0)]
rr <- mas[!(mas[mas >= pr^2] %% pr == 0)]
pr_seq <- integer()
pr_seq <- c(pr_seq, mas[mas < pr^2])
pr_seq <- mas[1]
pr <- pr_seq[length(pr_seq)]
rr <- mas[!(mas[mas >= pr^2] %% pr == 0)]
pr_seq <- c(pr_seq, mas[mas < pr^2])
pr_seq <- mas[mas < pr^2]
pr <- pr_seq[length(pr_seq)]
rr <- mas[!(mas[mas >= pr^2] %% pr == 0)]
pr_seq <- mas[mas < pr^2]
n <- 100
upp_b <- round(n / log(n))
mas <- 2:n
p <- 1
i <- 1
nn <- 10
pr_seq <- mas[1]
pr <- pr_seq[length(pr_seq)]
pr_seq <- mas[mas < pr^2]
mas <- mas[!(mas[mas >= pr^2] %% pr == 0)]
mas
pr <- pr_seq[length(pr_seq)]
pr_seq <- mas[mas < pr^2]
mas <- mas[!(mas[mas >= pr^2] %% pr == 0)]
mas
pr_seq
pr <- pr_seq[length(pr_seq)]
pr_seq <- mas[mas < pr^2]
mas <- mas[!(mas[mas >= pr^2] %% pr == 0)]
mas
pr_seq
n <- 100
upp_b <- round(n / log(n))
mas <- 2:n
p <- 1
i <- 1
nn <- 10
pr_seq <- mas[1]
pr <- pr_seq[length(pr_seq)]
pr_seq <- mas[mas < pr^2]
mas[which(mas[mas >= pr^2] %% pr == 0)]
compl <- mas[which(mas[mas >= pr^2] %% pr == 0)]
mas != compl
mas[mas != compl]
mas == compl
mas %in% compl
mas[!(mas %in% compl)]
mas <- mas[!(mas %in% compl)]
mas
pr_seq
pr <- pr_seq[length(pr_seq)]
pr_seq <- mas[mas < pr^2]
n <- 100
upp_b <- round(n / log(n))
mas <- 2:n
p <- 1
i <- 1
nn <- 10
pr_seq <- mas[1]
pr <- pr_seq[i]
pr_seq <- c(unique(pr_seq, mas[mas < pr^2]))
pr <- pr_seq[i]
pr_seq <- c(unique(pr_seq, mas[mas < pr^2]))
n <- 100
upp_b <- round(n / log(n))
mas <- 2:n
p <- 1
i <- 1
nn <- 10
pr_seq <- mas[1]
mas[mas < pr^2]
unique(pr_seq, mas[mas < pr^2])
c(pr_seq, mas[mas < pr^2])
unique(c(pr_seq, mas[mas < pr^2]))
pr_seq <- unique(c(pr_seq, mas[mas < pr^2]))
compl <- mas[which(mas[mas >= pr^2] %% pr == 0)]
mas <- mas[!(mas %in% compl)]
mas
pr_seq
i <- i + 1
pr <- pr_seq[i]
pr_seq <- unique(c(pr_seq, mas[mas < pr^2]))
compl <- mas[which(mas[mas >= pr^2] %% pr == 0)]
mas <- mas[!(mas %in% compl)]
mas
pr_seq
i <- i + 1
pr <- pr_seq[i]
pr_seq <- unique(c(pr_seq, mas[mas < pr^2]))
compl <- mas[which(mas[mas >= pr^2] %% pr == 0)]
mas <- mas[!(mas %in% compl)]
mas
pr_seq
i <- i + 1
pr <- pr_seq[i]
pr_seq <- unique(c(pr_seq, mas[mas < pr^2]))
compl <- mas[which(mas[mas >= pr^2] %% pr == 0)]
mas <- mas[!(mas %in% compl)]
mas
pr_seq
n <- 100
upp_b <- round(n / log(n))
mas <- 2:n
p <- 1
i <- 1
nn <- 10
pr_seq <- mas[1]
pr <- pr_seq[i]
pr_seq <- unique(c(pr_seq, mas[mas < pr^2]))
compl <- mas[which(mas[mas >= pr^2] %% pr == 0)]
mas <- mas[!(mas %in% compl)]
mas
pr_seq
i <- i + 1
pr <- pr_seq[i]
pr_seq <- unique(c(pr_seq, mas[mas < pr^2]))
compl <- mas[which(mas[mas >= pr^2] %% pr == 0)]
mas <- mas[!(mas %in% compl)]
mas
pr_seq
i <- i + 1
pr <- pr_seq[i]
pr_seq <- unique(c(pr_seq, mas[mas < pr^2]))
compl <- mas[which(mas[mas >= pr^2] %% pr == 0)]
mas <- mas[!(mas %in% compl)]
mas
pr_seq
i <- i + 1
25 >= 25
n <- 100
upp_b <- round(n / log(n))
mas <- 2:n
p <- 1
i <- 1
nn <- 10
pr_seq <- mas[1]
pr <- pr_seq[i]
pr_seq <- unique(c(pr_seq, mas[mas < pr^2]))
compl <- mas[which(mas[mas >= pr^2] %% pr == 0)]
mas <- mas[!(mas %in% compl)]
mas
pr_seq
i <- i + 1
pr <- pr_seq[i]
pr_seq <- unique(c(pr_seq, mas[mas < pr^2]))
compl <- mas[which(mas[mas >= pr^2] %% pr == 0)]
mas <- mas[!(mas %in% compl)]
mas
pr_seq
i <- i + 1
pr <- pr_seq[i]
pr_seq <- unique(c(pr_seq, mas[mas < pr^2]))
mas[which(mas[mas >= pr^2] %% pr == 0)]
mas[mas >= pr^2]
mas[mas >= pr^2] %% 5
mas[which(mas[mas >= pr^2] %% pr == 0)]
mas
mas <- mas[mas >= pr^2]
mas[!(mas %% pr == 0)]
pr <- pr_seq[i]
pr_seq <- unique(c(pr_seq, mas[mas < pr^2]))
mas <- mas[mas >= pr^2]
mas <- mas[!(mas %% pr == 0)]
mas
pr_seq
i <- i + 1
pr <- pr_seq[i]
pr_seq <- unique(c(pr_seq, mas[mas < pr^2]))
pr_seq
mas <- mas[mas >= pr^2]
mas <- mas[!(mas %% pr == 0)]
mas
pr_seq
num_primorial <- function(n) {
e <- 1
while (upp_bound < n) {
upp_bound <- round(10^e / log(10^e))
}
mas <- 2:upp_bound
i <- 1
pr_seq <- mas[1]
while(length(pr_seq) <= n) {
pr <- pr_seq[i]
pr_seq <- unique(c(pr_seq, mas[mas < pr^2]))
mas <- mas[mas >= pr^2]
mas <- mas[!(mas %% pr == 0)]
i <- i + 1
}
return(prod(pr_seq[1:n]))
}
num_primorial(5)
num_primorial <- function(n) {
e <- 1
upp_bound <- 1
while (upp_bound < n) {
upp_bound <- round(10^e / log(10^e))
}
mas <- 2:upp_bound
i <- 1
pr_seq <- mas[1]
while(length(pr_seq) <= n) {
pr <- pr_seq[i]
pr_seq <- unique(c(pr_seq, mas[mas < pr^2]))
mas <- mas[mas >= pr^2]
mas <- mas[!(mas %% pr == 0)]
i <- i + 1
}
return(prod(pr_seq[1:n]))
}
num_primorial(5)
10^1.5
10^2
10^2.5
num_primorial <- function(n) {
e <- 1
upp_bound <- 1
while (upp_bound < n) {
upp_bound <- round(10^e / log(10^e))
e <- e + 0.5
}
mas <- 2:upp_bound
i <- 1
pr_seq <- mas[1]
while(length(pr_seq) <= n) {
pr <- pr_seq[i]
pr_seq <- unique(c(pr_seq, mas[mas < pr^2]))
mas <- mas[mas >= pr^2]
mas <- mas[!(mas %% pr == 0)]
i <- i + 1
}
return(prod(pr_seq[1:n]))
}
num_primorial(5)
n <- 5
e <- 1
upp_bound <- 1
upp_bound <- round(10^e / log(10^e))
e <- e + 0.5
upp_bound <- round(10^e / log(10^e))
e <- 1
sum_prime <- 1
upp_bound <- 10
upp_bound <- 10^e
sum_prime <- round(upp_bound / log(upp_bound))
e <- e + 0.5
upp_bound <- 10^e
sum_prime <- round(upp_bound / log(upp_bound))
e <- 1
sum_prime <- 1
upp_bound <- 10
upp_bound <- round(10^e)
sum_prime <- round(upp_bound / log(upp_bound))
e <- e + 0.5
upp_bound <- round(10^e)
sum_prime <- round(upp_bound / log(upp_bound))
e <- 1
sum_prime <- 1
upp_bound <- 10
while (sum_prime < n) {
upp_bound <- round(10^e)
sum_prime <- round(upp_bound / log(upp_bound))
e <- e + 0.5
}
mas <- 2:upp_bound
i <- 1
pr_seq <- mas[1]
while(length(pr_seq) <= n) {
pr <- pr_seq[i]
pr_seq <- unique(c(pr_seq, mas[mas < pr^2]))
mas <- mas[mas >= pr^2]
mas <- mas[!(mas %% pr == 0)]
i <- i + 1
}
prod(pr_seq[1:n])
num_primorial <- function(n) {
e <- 1
sum_prime <- 1
upp_bound <- 10
while (sum_prime < n) {
upp_bound <- round(10^e)
sum_prime <- round(upp_bound / log(upp_bound))
e <- e + 0.5
}
mas <- 2:upp_bound
i <- 1
pr_seq <- mas[1]
while(length(pr_seq) <= n) {
pr <- pr_seq[i]
pr_seq <- unique(c(pr_seq, mas[mas < pr^2]))
mas <- mas[mas >= pr^2]
mas <- mas[!(mas %% pr == 0)]
i <- i + 1
}
return(prod(pr_seq[1:n]))
}
num_primorial(5)
num_primorial(3)
num_primorial(9)
num_primorial <- function(n) {
e <- 1
sum_prime <- 1
upp_bound <- 10
while (sum_prime < n) {
upp_bound <- round(10^e)
sum_prime <- round(upp_bound / log(upp_bound))
e <- e + 0.5
}
mas <- 2:upp_bound
i <- 1
pr_seq <- mas[1]
while(length(pr_seq) <= n) {
pr <- pr_seq[i]
pr_seq <- unique(c(pr_seq, mas[mas < pr^2]))
mas <- mas[mas >= pr^2]
mas <- mas[!(mas %% pr == 0)]
i <- i + 1
}
return(prod(pr_seq[1:n]))
}
num_primorial <- function(n) {
e <- 1
sum_prime <- 1
upp_bound <- 10
while (sum_prime < n) {
upp_bound <- round(10^e)
sum_prime <- round(upp_bound / log(upp_bound))
e <- e + 0.5
}
mas <- 2:upp_bound
i <- 1
pr_seq <- mas[1]
while(length(pr_seq) <= n) {
pr <- pr_seq[i]
pr_seq <- unique(c(pr_seq, mas[mas < pr^2]))
mas <- mas[mas >= pr^2]
mas <- mas[!(mas %% pr == 0)]
i <- i + 1
}
return(prod(pr_seq[1:n]))
}
num_primorial(9)
num_primorial(3)
num_primorial(4)
e <- 1
sum_prime <- 1
upp_bound <- 10
n <- 4
upp_bound <- round(10^e)
sum_prime <- round(upp_bound / log(upp_bound))
e <- e + 0.5
upp_bound <- round(10^e)
sum_prime <- round(upp_bound / log(upp_bound))
e <- 1
sum_prime <- 1
upp_bound <- 10
n <- 4
while (sum_prime < n) {
upp_bound <- round(10^e)
sum_prime <- round(upp_bound / log(upp_bound))
e <- e + 0.5
}
mas <- 2:upp_bound
i <- 1
pr_seq <- mas[1]
e <- 1
sum_prime <- 1
upp_bound <- 10
upp_bound <- round(10^e)
round(upp_bound / log(upp_bound))
num_primorial <- function(n) {
e <- 1
sum_prime <- 1
upp_bound <- 10
while (sum_prime < n) {
upp_bound <- round(10^e)
sum_prime <- round(upp_bound / log(upp_bound))
e <- e + 0.5
}
mas <- 2:(upp_bound + 1)
i <- 1
pr_seq <- mas[1]
while(length(pr_seq) <= n) {
pr <- pr_seq[i]
pr_seq <- unique(c(pr_seq, mas[mas < pr^2]))
mas <- mas[mas >= pr^2]
mas <- mas[!(mas %% pr == 0)]
i <- i + 1
}
return(prod(pr_seq[1:n]))
}
num_primorial(4)
num_primorial(5)
num_primorial(8)
e <- 1
sum_prime <- 1
upp_bound <- 10
b <- 1.08366
round(upp_bound / (log(upp_bound) + b))
num_primorial(1)
num_primorial(100)
num_primorial(10000)
num_primorial(1000)
num_primorial(500)
num_primorial(50)
gc()
seq(-1, 1)
sum(seq(-1, 1))
sum(seq(1, 1))
371 %% 10
371 %/% 10
978 %% 10
978 %/% 10
seven <- function(m) {
i <- 0
while(nchar(m) > 2) {
m <- (m %/% 10) - (2 * (m %% 10))
i <- i + 1
}
return(c(m, i))
}
seven(1603)
seven(371)
seven(0)
seven(5)
seven(7)
mas <- 2:147
rm(seven())
rm(seven)
i <- 1
pr_seq <- mas[1]
while(length(pr_seq) <= n) {
pr <- pr_seq[i]
pr_seq <- unique(c(pr_seq, mas[mas < pr^2]))
mas <- mas[mas >= pr^2]
mas <- mas[!(mas %% pr == 0)]
i <- i + 1
}
while(length(pr_seq) <= 147) {
pr <- pr_seq[i]
pr_seq <- unique(c(pr_seq, mas[mas < pr^2]))
mas <- mas[mas >= pr^2]
mas <- mas[!(mas %% pr == 0)]
i <- i + 1
}
pr_seq
mas <- 2:147
mas <- 2:148
pr_seq <- mas[1]
mas <- 2:148
i <- 1
pr_seq <- mas[1]
while(pr_seq[i] <= 147) {
pr <- pr_seq[i]
pr_seq <- unique(c(pr_seq, mas[mas < pr^2]))
mas <- mas[mas >= pr^2]
mas <- mas[!(mas %% pr == 0)]
i <- i + 1
}
mas <- 2:148
i <- 1
pr_seq <- mas[1]
while(pr_seq[length(pr_seq)] <= 147) {
pr <- pr_seq[i]
pr_seq <- unique(c(pr_seq, mas[mas < pr^2]))
mas <- mas[mas >= pr^2]
mas <- mas[!(mas %% pr == 0)]
i <- i + 1
}
setwd("C:/Users/User/Desktop/git_rep/My_rep/Combined_app")
library(shiny)
runApp(host = '0.0.0.0', port = 4321)
